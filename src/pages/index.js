import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {ethers} from 'ethers'
import { useEffect, useState } from "react";

import pets from "../pets.json"

const nftAddress = "0x16A9b6E13A2C6D9CCf96cF0180D74A1F362762Af" //sepolia
import nftAbi from "../abi.json"

export default function Home() {
  const [isConnected, setIsConnected] = useState(false);
  const [hasMetamask, setHasMetamask] = useState(false);
  const [signer, setSigner] = useState(undefined);
  const [signerAddress, setSignerAddress] = useState(undefined);


  useEffect(() => {
    if (typeof window.ethereum !== "undefined") {
      setHasMetamask(true);
    }
  });

  async function connect() {
    if (window.ethereum) {
      try {
        window.ethereum.request({ method: "eth_requestAccounts" })
          .then(handleAccountsChanged)
          .catch( (err) => {console.error(err);
        })

        await window.ethereum.on('accountsChanged', handleAccountsChanged)
        async function handleAccountsChanged(accounts){
          if (accounts.length === 0){
            console.log("Please Connect Metamask");
            return;
          }
          else if (accounts[0] != signerAddress){
            const provider = new ethers.BrowserProvider(window.ethereum);
            let signer = await provider.getSigner()
            console.log("signer : ",signer);
            let signerAddress = await signer.getAddress()
            setSigner(signer);
            setSignerAddress(signerAddress)
            setIsConnected(true)

            await page_init()

            const adoption = new ethers.Contract(nftAddress, nftAbi, signer);
            console.log("adoption.address : ",await adoption.getAddress());
            console.log(await provider.getBalance(await signer.getAddress()));
            try {
              let tx = await adoption.adopt(0);
              const receipt = await tx.wait();
              console.log("receipt : ",receipt);
            } catch (error) {
              console.log(error);
            }
            
            return ;
          }
        }        
      } catch (e) {
        console.log(e);
      }
    } else {
      setIsConnected(false);
    }
  }

  async function adopt() {
    if (typeof window.ethereum !== "undefined") {
      // const provider = new ethers.BrowserProvider(window.ethereum);
      const adoption = new ethers.Contract(nftAddress, nftAbi, signer);
      console.log("adoption.address : ",adoption.address);

      try {
        
        const id = 0;
        let tx = await adoption.connect(signer).adopt(id);
        const receipt = await tx.wait();
        console.log("receipt : ",receipt);
      } catch (error) {
        console.log(error);
      }
    } else {
      console.log("Please install MetaMask");
    }
  }

  async function page_init() {
    try {
      
      var petsRows = document.getElementById('petsRow');
      var pet = document.getElementById('petTemplate');
      // console.log(pet.innerHTML);
      for(let i = 0; i < pets.length; i++) {
        let obj = pets[i];
        
        var petInnerHTML = pet.innerHTML
        petInnerHTML = petInnerHTML.replace('style={{display: "none"}}', '')
        petInnerHTML = petInnerHTML.replace('Scrappy', obj.name) 
        petInnerHTML = petInnerHTML.replace('Golden Retriever', obj.breed)
        petInnerHTML = petInnerHTML.replace('3', obj.age)
        petInnerHTML = petInnerHTML.replace('Warren, MI', obj.location)
        petInnerHTML = petInnerHTML.replace('https://animalso.com/wp-content/uploads/2017/01/Golden-Retriever_6.jpg', obj.picture)
        petInnerHTML = petInnerHTML.replace('<button className="btn btn-default btn-adopt" data-id="0">Adopt</button>', '<button className="btn btn-default btn-adopt" onclick={() => adopt()} data-id="0">Adopt</button>')


        petsRows.innerHTML += petInnerHTML


        // pet.getElementsByClassName('panel-title').text = obj.name;
        // petsRows.appendChild(pet);
        // console.log(pet.innerHTML);

      }
    } catch (error) {
      console.log(error);
    }

  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <div >
          {hasMetamask ? 
            ( isConnected ? 
              (`Connected! ( ${signerAddress} )`) : (<button onClick={() => connect()}>Connect</button>)
            ) : 
            ("Please install metamask")
          }
        </div>
        <br/><br/>
        
        <div className="container">
          <div className="row">
            <div className="col-xs-12 col-sm-8 col-sm-push-2">
              <h1 className="text-center">Demo Pet Shop</h1>
              <hr/>
              <br/>
            </div>
          </div>

          <div id="petsRow" className="row">
            {/* <!-- PETS LOAD HERE --> */}
          </div>
        </div>

        <div id="petTemplate" style={{display: "none"}}>
          <div className="col-sm-6 col-md-4 col-lg-3">
            <div className="panel panel-default panel-pet">
              <div className="panel-heading">
                <h3 className="panel-title">Scrappy</h3>
              </div>
              <div className="panel-body" style={{color:"black"}}>
                <img alt="140x140" className="img-rounded img-center" style={{width: "100%"}} src="https://animalso.com/wp-content/uploads/2017/01/Golden-Retriever_6.jpg" data-holder-rendered="true"/>
                <br/><br/>
                <strong>Breed</strong>: <span className="pet-breed">Golden Retriever</span><br/>
                <strong>Age</strong>: <span className="pet-age">3</span><br/>
                <strong>Location</strong>: <span className="pet-location">Warren, MI</span><br/><br/>
                <button className="btn btn-default btn-adopt" data-id="0">Adopt</button>
              </div>
            </div>
          </div>
        </div>

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
